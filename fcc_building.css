/* Variable declarations begin with two dashes (-) and are given a name and a value like this: --variable-name: value;. 
In the rule for the bb1 class, create a variable named --building-color1 and give it a value of #999
STEP 14
*/

.bb1 {
  width: 10%;
  height: 70%;
  display: flex;
  flex-direction: column;
  align-items: center;
  --building-color1: #999;
}

---------------------------------------------------------

/*

That didn't work, because the variables you declared in .bb1 do not cascade to the .bb2 and .bb3 sibling elements. 
That's just how CSS works. Because of this, variables are often declared in the :root selector. This is the highest level selector in CSS; 
putting your variables there will make them usable everywhere. Add the :root selector to the top of your stylesheet, and move all your 
variable declarations there.

.bb1 {
  width: 10%;
  height: 70%;
  display: flex;
  flex-direction: column;
  align-items: center;
  --building-color1: #aa80ff;
  --building-color2: #66cc99;
  --building-color3: #cc6699;

.bb1d {
  width: 100%;
  height: 70%;
  background-color: var(--building-color1);
}

.bb2 {
  width: 10%;
  height: 50%;
  background-color: var(--building-color2, green);
}

.bb3 {
  width: 10%;
  height: 55%;
  background-color: var(--building-color3, pink);

*/

:root {
  --building-color1: #aa80ff;
  --building-color2: #66cc99;
  --building-color3: #cc6699;
  --building-color4: #538cc6;
}

------------------------------------------------------------------------------------------------------------------
/*
Add the same display, align-items, and justify-content properties and values to .foreground-buildings that you used on 
.background-buildings. Again, this will use Flexbox to evenly space the buildings across the bottom of their container.
*/
  display: flex;
  align-items: flex-end;
  justify-content: space-evenly;


------------------------------------------------------------------------------------------------------------------
/*

https://github.com/freeCodeCamp/freeCodeCamp/issues/47568
DISCUSSION STEP 40

Gradients in CSS are a way to transition between colors across the distance of an element. 
They are applied to the background property and the syntax looks like this:

gradient-type(
  color1,
  color2
);

*/

  background: linear-gradient(var(--building-color1), var(--window-color1)); /* correct syntax */

  background: linear-gradient(
    --building-color1,
    --window-color1);
/*incorrect syntax*/


------------------------------------------------------------------------------------------------------------------

/*
At the top of the sky gradient color list, where you would put a direction for the gradient;
add circle closest-corner at 15% 15%,. This will move the start of the gradient to 15% from the top and left.
It will make it end at the closest-corner and it will maintain a circle shape. 
These are some keywords built into gradients to describe how it behaves.
*/

.sky {
  background: radial-gradient( circle closest-corner at 15% 15%,
      #ffcf33,
      #ffcf33 20%,
      #ffff66 21%,
      #bbeeff 100%
    );
}

------------------------------------------------------------------------------------------------------------------

/*
A media query can be used to change styles based on certain conditions, and they look like this:

@media (condition) {

}  
Add an empty media query at the bottom of your stylesheet with a condition of max-width: 1000px. Styles added in here 
will take effect when the document size is 1000px wide or less.
*/


