///"The span[class~="sr-only"] selector will select any span element whose class includes sr-only."///
span[class~="sr-only"] {
  property: value;

}


///The clip-path property determines the shape the clip property should take. 
Set both the clip-path and -webkit-clip-path properties to the value of inset(50%), forming the clip-path into a rectangle within the element.
clip-path.

span[class~="sr-only"] {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  -webkit-clip-path: inset(50%);

}

///To prevent the text content from overflowing, give your span[class~="sr-only"] selector an overflow property set to hidden and 
a white-space property set to nowrap.///

/*The :first-of-type pseudo-selector is used to target the first element that matches the selector.*/

/*The last part of your table heading is your years. Create a #years selector, and enable flexbox. 
Justify the content to the end of the flex direction, and make the element sticky. 
Fix it to the top of its container with top: 0.
*/

#years {
  display: flex;
  top: 0;
  justify-content: flex-end;
  position: sticky;
}


/* The calc() function is a CSS function that allows you to calculate a value based on other values. 
For example, you can use it to calculate the width of the viewport minus the margin of an element: */

.example {
  margin: 10px;
  width: calc(100% - 20px);
}
/* Ensure your years do not get hidden by setting a z-index of 999. Then, give it a margin of 0 -2px, and a padding 
set to 0.5rem calc(1.25rem + 2px) 0.5rem 0. */

#years {
  display: flex;
  justify-content: flex-end;
  position: sticky;
  top: 0;
  background: #0a0a23;
  color: #fff;
  z-index: 999;
  margin: 0 -2px;
  padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;
}

/* The [attribute="value"] selector targets any element that has an attribute with a specific value. 
Create a tr[class="total"] selector to target specifically your tr elements with the total class.  */
